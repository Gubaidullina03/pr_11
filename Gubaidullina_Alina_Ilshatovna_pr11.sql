
--Практическое задание №11

--Задание 1

--Запросить план для чтения и интерпретации
--информации, возвращаемой планировщиком.
--Предположим, что мы имеем дело с базой данных sqlda
--с записями о клиентах и что компания хочет, чтобы мы
--внедрили систему для регулярного создания отчетов о
--деятельности клиентов в определенном географическом
--регионе.
--Чтобы убедиться, что отчет может быть запущен
--своевременно, нужна оценка того, сколько времени займет
--SQL-запрос. Использовать команду EXPLAIN, чтобы узнать,
--сколько времени займут запросы отчета.

--Используйте команду EXPLAIN, чтобы вернуть план
--запроса для выбора всех доступных записей в таблице
--клиентов

EXPLAIN SELECT * FROM customers;

--Результат запроса нам показывает первый аспект предоставляемого плана — это тип
--сканирования, выполняемого запросом (sequential scan - последовательное сканирование).
--Затем первое измерение, сообщаемое планировщиком — это
--начальные затраты, т. е. время, затраченное до начала
--сканирования.
--Следующее число в последовательности указывает
--общую стоимость выполнения запроса, если будут
--получены все доступные строки. Последняя цифра в плане указывает общее
--количество строк, которые доступны для возврата, если план полностью выполнен.


-- Повторите запрос из шага 2 этого упражнения, на этот раз ограничив количество
--возвращаемых записей до 15.

EXPLAIN SELECT * FROM customers LIMIT 15;

--Теперь наш план состоит из двух отдельных шагов, причем нижняя
--строка плана повторяет показанный ранее.
--Верхняя строка плана — это компонент, который
--ограничивает результат только 15 строками. Процесс Limit —
--это дополнительная стоимость запроса; однако это весьма
--незначительно по сравнению с планом более низкого уровня,
-- извлекает примерно 26 368 строк за 1790 запросов
--страниц.

--Этап Limit возвращает только 15 строк по цене 0,46
--запроса страницы.


-- Создайте план запроса, выбрав все строки, где клиенты живут в пределах широты 30
--и 40 градусов.


EXPLAIN SELECT * FROM customers WHERE latitude > 30 and latitude < 40;

--Теперь используем более сложный запрос для
--поиска грасных широт между двумя конкретными значениями в
--столбце latitude. 


--Верхняя строка снова повторяет результат первого запроса, который нам показывает тип
--сканирования, выполняемого запросом (sequential scan - последовательное сканирование) и т.д
--Нижняя строка показывает какой фильтр применяется к каждой строке во время сканирования.


